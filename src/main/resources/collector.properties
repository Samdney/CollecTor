######## Collector Properties
#
######## Run Configuration ########
## the following defines, if this module is activated
BridgedescsActivated = false
# period in minutes
BridgedescsPeriodMinutes = 60
# offset in minutes since the epoch and
BridgedescsOffsetMinutes = 9
## the following defines, if this module is activated
ExitlistsActivated = false
# period in minutes
ExitlistsPeriodMinutes = 60
# offset in minutes since the epoch and
ExitlistsOffsetMinutes = 2
## the following defines, if this module is activated
RelaydescsActivated = false
# period in minutes
RelaydescsPeriodMinutes = 30
# offset in minutes since the epoch and
RelaydescsOffsetMinutes = 5
## the following defines, if this module is activated
TorperfActivated = false
# period in minutes
TorperfPeriodMinutes = 360
# offset in minutes since the epoch and
TorperfOffsetMinutes = 1
# the following defines, if this module is activated
UpdateindexActivated = false
# period in minutes
UpdateindexPeriodMinutes = 2
# offset in minutes since the epoch and
UpdateindexOffsetMinutes = 0
######## General Properties ########
InstanceBaseUrl = "https://collector.torproject.org"
LockFilePath = lock
IndexPath = out/index
ArchivePath = out/archive
RecentPath = out/recent
StatsPath = out/stats
######## Relay descriptors ########
#
## Read cached-* files from a local Tor data directory
ImportCachedRelayDescriptors = false
#
## Relative path to Tor data directory to read cached-* files from
## the listed path(s). If there is more that one separated by comma.
CachedRelayDescriptorsDirectories = in/relay-descriptors/cacheddesc/
#
## Import directory archives from disk, if available
ImportDirectoryArchives = false
#
## Relative path to directory to import directory archives from
DirectoryArchivesDirectory = in/relay-descriptors/archives/
#
## Keep a history of imported directory archive files to know which files
## have been imported before. This history can be useful when importing
## from a changing source to avoid importing descriptors over and over
## again, but it can be confusing to users who don't know about it.
KeepDirectoryArchiveImportHistory = false
#
## Download relay descriptors from directory authorities, if required
DownloadRelayDescriptors = false
#
## Comma separated list of directory authority addresses (IP[:port]) to
## download missing relay descriptors from
DirectoryAuthoritiesAddresses = 86.59.21.38,76.73.17.194:9030,171.25.193.9:443,193.23.244.244,208.83.223.34:443,128.31.0.34:9131,194.109.206.212,212.112.245.170,154.35.32.5
#
## Comma separated list of directory authority fingerprints to download
## votes
DirectoryAuthoritiesFingerprintsForVotes = 14C131DFC5C6F93646BE72FA1401C02A8DF2E8B4,27B6B5996C426270A5C95488AA5BCEB6BCC86956,49015F787433103580E3B66A1707A00E60F2D15B,585769C78764D58426B8B52B6651A5A71137189A,80550987E1D626E3EBA5E5E75A458DE0626D088C,D586D18309DED4CD6D57C18FDB97EFA96D330566,E8A9C45EDE6D711294FADF8E7951F4DE6CA56B58,ED03BB616EB2F60BEC80151114BB25CEF515B226,EFCBE720AB3A82B99F9E953CD5BF50F7EEFC7B97
#
## Download the current consensus (only if DownloadRelayDescriptors is 1)
DownloadCurrentConsensus = true
#
## Download the current microdesc consensus (only if
## DownloadRelayDescriptors is true)
DownloadCurrentMicrodescConsensus = true
#
## Download current votes (only if DownloadRelayDescriptors is true)
DownloadCurrentVotes = true
#
## Download missing server descriptors (only if DownloadRelayDescriptors
## is true)
DownloadMissingServerDescriptors = true
#
## Download missing extra-info descriptors (only if
## DownloadRelayDescriptors is true)
DownloadMissingExtraInfoDescriptors = true
#
## Download missing microdescriptors (only if
## DownloadRelayDescriptors is true)
DownloadMissingMicrodescriptors = true
#
## Download all server descriptors from the directory authorities at most
## once a day (only if DownloadRelayDescriptors is true)
DownloadAllServerDescriptors false
#
## Download all extra-info descriptors from the directory authorities at
## most once a day (only if DownloadRelayDescriptors is true)
DownloadAllExtraInfoDescriptors = false
#
## Compress relay descriptors downloads by adding .z to the URLs
CompressRelayDescriptorDownloads = false
#
## Relative path to directory to write directory archives to
DirectoryArchivesOutputDirectory = out/relay-descriptors/
#
#
######## Bridge descriptors ########
#
## Relative path to directory to import bridge descriptor snapshots from
BridgeSnapshotsDirectory = in/bridge-descriptors/
#
## Replace IP addresses in sanitized bridge descriptors with 10.x.y.z
## where x.y.z = H(IP address | bridge identity | secret)[:3], so that we
## can learn about IP address changes.
ReplaceIpAddressesWithHashes = false
#
## Limit internal bridge descriptor mapping state to the following number
## of days, or inf for unlimited.
BridgeDescriptorMappingsLimit = inf
#
## Relative path to directory to write sanitized bridges to
SanitizedBridgesWriteDirectory = out/bridge-descriptors/

######## Exit lists ########
#
##
ExitlistOutputDirectory = out/exit-lists/
ExitlistUrl = https://check.torproject.org/exit-addresses

######## Torperf downloader ########
#
## Path to the directory to store Torperf files in.
## A relative path starts with ./
TorperfOutputDirectory = out/torperf/

## Torperf source names and base URLs
## multiple pairs can be specified separated by semi-colon, e.g.
## TorperfSourceName = torperf_A, http://some.torproject.org/; another, http://another.torproject.org/
TorperfSources = torperf, http://torperf.torproject.org/

## Torperf measurement file size in bytes, .data file, and .extradata file
## available on a given source (multiple times lists can be given
## TorperfFiles = torperf 51200 50kb.data 50kb.extradata, torperf 1048576 1mb.data 1mb.extradata
TorperfFilesLines = torperf 51200 50kb.data 50kb.extradata, torperf 1048576 1mb.data 1mb.extradata, torperf 5242880 5mb.data 5mb.extradata
