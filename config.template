#### Data sources ####
#
## Read cached-* files from a local Tor data directory
#ImportCachedRelayDescriptors 0
#
## Relative path to Tor data directory to read cached-* files from (can be
## specified multiple times)
#CachedRelayDescriptorsDirectory cacheddesc/
#
## Import directory archives from disk, if available
#ImportDirectoryArchives 0
#
## Relative path to directory to import directory archives from
#DirectoryArchivesDirectory archives/
#
## Keep a history of imported directory archive files to know which files
## have been imported before. This history can be useful when importing
## from a changing source to avoid importing descriptors over and over
## again, but it can be confusing to users who don't know about it.
#KeepDirectoryArchiveImportHistory 0
#
## Download relay descriptors from directory authorities, if required
#DownloadRelayDescriptors 0
#
## Comma separated list of directory authority addresses (IP[:port]) to
## download missing relay descriptors from
#DownloadFromDirectoryAuthorities 86.59.21.38,194.109.206.212,212.112.245.170
#
## Import bridge snapshots from disk, if available
#ImportBridgeSnapshots 0
#
## Relative path to directory to import bridge descriptor snapshots from
#BridgeSnapshotsDirectory bridge-directories/
#
## Download and process GetTor stats
#DownloadProcessGetTorStats 0
#
## URL to download GetTor stats from
#GetTorStatsURL http://gettor.torproject.org:8080/~gettor/gettor_stats.txt
#
## Download exit list and store it to disk
#DownloadExitList 0
#
#### Data sinks ####
#
## Write directory archives to disk
#WriteDirectoryArchives 0
#
## Relative path to directory to write directory archives to
#DirectoryArchivesOutputDirectory directory-archive/
#
## Write aggregate statistics (bridges and bridge users per day, directory
## clients per day, torperf results, packages requested from GetTor, etc.)
## to database for later evaluation
#WriteAggregateStatsDatabase 0
#
## JDBC string for relay descriptor database
#RelayDescriptorDatabaseJDBC jdbc:postgresql://localhost/tordir?user=ernie&password=password
#
## Write sanitized bridges to disk
#WriteSanitizedBridges 0
#
## Replace IP addresses in sanitized bridge descriptors with 10.x.y.z
## where x.y.z = H(IP address | bridge identity | secret)[:3], so that we
## can learn about IP address changes.
#ReplaceIPAddressesWithHashes 0
#
## Limit internal bridge descriptor mapping state to the following number
## of days, or -1 for unlimited.
#LimitBridgeDescriptorMappings -1
#
## Relative path to directory to write sanitized bridges to
#SanitizedBridgesWriteDirectory sanitized-bridges/

